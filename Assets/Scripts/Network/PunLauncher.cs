// --------------------------------------------------------------------------------------------------------------------
// <copyright file=PunLauncher.cs company=League of HTC Vive Developers>
/*
11111111111111111111111111111111111111001111111111111111111111111
11111111111111111111111111111111111100011111111111111111111111111
11111111111111111111111111111111100001111111111111111111111111111
11111111111111111111111111111110000111111111111111111111111111111
11111111111111111111111111111000000111111111111111111111111111111
11111111111111111111111111100000011110001100000000000000011111111
11111111111111111100000000000000000000000000000000011111111111111
11111111111111110111000000000000000000000000000011111111111111111
11111111111111111111111000000000000000000000000000000000111111111
11111111111111111110000000000000000000000000000000111111111111111
11111111111111111100011100000000000000000000000000000111111111111
11111111111111100000110000000000011000000000000000000011111111111
11111111111111000000000000000100111100000000000001100000111111111
11111111110000000000000000001110111110000000000000111000011111111
11111111000000000000000000011111111100000000000000011110001111111
11111110000000011111111111111111111100000000000000001111100111111
11111111000001111111111111111111110000000000000000001111111111111
11111111110111111111111111111100000000000000000000000111111111111
11111111111111110000000000000000000000000000000000000111111111111
11111111111111111100000000000000000000000000001100000111111111111
11111111111111000000000000000000000000000000111100000111111111111
11111111111000000000000000000000000000000001111110000111111111111
11111111100000000000000000000000000000001111111110000111111111111
11111110000000000000000000000000000000111111111110000111111111111
11111100000000000000000001110000001111111111111110001111111111111
11111000000000000000011111111111111111111111111110011111111111111
11110000000000000001111111111111111100111111111111111111111111111
11100000000000000011111111111111111111100001111111111111111111111
11100000000001000111111111111111111111111000001111111111111111111
11000000000001100111111111111111111111111110000000111111111111111
11000000000000111011111111111100011111000011100000001111111111111
11000000000000011111111111111111000111110000000000000011111111111
11000000000000000011111111111111000000000000000000000000111111111
11001000000000000000001111111110000000000000000000000000001111111
11100110000000000001111111110000000000000000111000000000000111111
11110110000000000000000000000000000000000111111111110000000011111
11111110000000000000000000000000000000001111111111111100000001111
11111110000010000000000000000001100000000111011111111110000001111
11111111000111110000000000000111110000000000111111111110110000111
11111110001111111100010000000001111100000111111111111111110000111
11111110001111111111111110000000111111100000000111111111111000111
11111111001111111111111111111000000111111111111111111111111100011
11111111101111111111111111111110000111111111111111111111111001111
11111111111111111111111111111110001111111111111111111111100111111
11111111111111111111111111111111001111111111111111111111001111111
11111111111111111111111111111111100111111111111111111111111111111
11111111111111111111111111111111110111111111111111111111111111111
*/
//   
// </copyright>
// <summary>
//  Chinese Chess VR
// </summary>
// <author>胡良云（CloudHu）</author>
//中文注释：胡良云（CloudHu） 3/28/2017
// --------------------------------------------------------------------------------------------------------------------

using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.SceneManagement; 

using Random = UnityEngine.Random;
/// <summary>
/// FileName: PunLauncher.cs
/// Author: 胡良云（CloudHu）
/// Corporation: 
/// Description: 
/// DateTime: 3/28/2017
/// </summary>
public class PunLauncher  : Photon.PunBehaviour {

		#region Public Variables  //公共变量区域

		[Tooltip("每间房间的最大玩家数量")]
		public byte maxPlayersPerRoom = 2;

		public string Version = "1.0";

        [Tooltip("The UI Loader Anime")]
        public Loader loaderAnime;
        #endregion

	    #region Private Variables   //私有变量区域
	    /// <summary>
	    /// 跟踪当前进程。因为连接是异步的，且是基于来自Photon的几个回调，
	    /// 我们需要跟踪这一点，以在我们收到Photon回调时适当地调整该行为。
	    /// 这通常是用于OnConnectedToMaster()回调。
	    /// </summary>
	    bool isConnecting;

		#endregion

		#region MonoBehaviour CallBacks //回调函数区域

		public virtual void Start()
		{
			PhotonNetwork.autoJoinLobby = false;    // we join randomly. always. no need to join a lobby to get the list of rooms.
			PhotonNetwork.automaticallySyncScene = true;
		}

		#endregion


		#region Public Methods //公共方法


		public void Connect(){
			if (!PhotonNetwork.connected)
			{
				Debug.Log("Connect() was called by Unity. Scene is loaded. Let's connect to the Photon Master Server. Calling: PhotonNetwork.ConnectUsingSettings();");

				PhotonNetwork.ConnectUsingSettings(Version);
	            if (loaderAnime != null)
	            {
	                loaderAnime.StartLoaderAnimation();
	            }
        	}
		}

		#endregion


		#region Photon.PunBehaviour CallBacks   //PUN回调区域
		public virtual void OnConnectedToMaster()
		{
			Debug.Log("OnConnectedToMaster() was called by PUN. Now this client is connected and could join a room. Calling: PhotonNetwork.JoinRandomRoom();");
			PhotonNetwork.JoinRandomRoom();
		}

		public virtual void OnJoinedLobby()
		{
			Debug.Log("OnJoinedLobby(). This client is connected and does get a room-list, which gets stored as PhotonNetwork.GetRoomList(). This script now calls: PhotonNetwork.JoinRandomRoom();");
			PhotonNetwork.JoinRandomRoom();
		}

		public virtual void OnPhotonRandomJoinFailed()
		{
			Debug.Log("OnPhotonRandomJoinFailed() was called by PUN. No random room available, so we create one. Calling: PhotonNetwork.CreateRoom(null, new RoomOptions() {maxPlayers = 4}, null);");
			PhotonNetwork.CreateRoom(null, new RoomOptions() { MaxPlayers = maxPlayersPerRoom }, null);
        	loaderAnime.StopLoaderAnimation();
    	}

		// the following methods are implemented to give you some context. re-implement them as needed.

		public virtual void OnFailedToConnectToPhoton(DisconnectCause cause)
		{
			Debug.LogError("Cause: " + cause);
        	loaderAnime.StopLoaderAnimation();
   		 }
		
	    public override void OnJoinedRoom()
	    {
	        loaderAnime.StopLoaderAnimation();
	    }

        #endregion

    }
