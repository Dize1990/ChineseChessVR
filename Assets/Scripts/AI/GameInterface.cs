// --------------------------------------------------------------------------------------------------------------------
// <copyright file=GameInterface.cs company=League of HTC Vive Dev>
/*
11111111111111111111111111111111111111001111111111111111111111111
11111111111111111111111111111111111100011111111111111111111111111
11111111111111111111111111111111100001111111111111111111111111111
11111111111111111111111111111110000111111111111111111111111111111
11111111111111111111111111111000000111111111111111111111111111111
11111111111111111111111111100000011110001100000000000000011111111
11111111111111111100000000000000000000000000000000011111111111111
11111111111111110111000000000000000000000000000011111111111111111
11111111111111111111111000000000000000000000000000000000111111111
11111111111111111110000000000000000000000000000000111111111111111
11111111111111111100011100000000000000000000000000000111111111111
11111111111111100000110000000000011000000000000000000011111111111
11111111111111000000000000000100111100000000000001100000111111111
11111111110000000000000000001110111110000000000000111000011111111
11111111000000000000000000011111111100000000000000011110001111111
11111110000000011111111111111111111100000000000000001111100111111
11111111000001111111111111111111110000000000000000001111111111111
11111111110111111111111111111100000000000000000000000111111111111
11111111111111110000000000000000000000000000000000000111111111111
11111111111111111100000000000000000000000000001100000111111111111
11111111111111000000000000000000000000000000111100000111111111111
11111111111000000000000000000000000000000001111110000111111111111
11111111100000000000000000000000000000001111111110000111111111111
11111110000000000000000000000000000000111111111110000111111111111
11111100000000000000000001110000001111111111111110001111111111111
11111000000000000000011111111111111111111111111110011111111111111
11110000000000000001111111111111111100111111111111111111111111111
11100000000000000011111111111111111111100001111111111111111111111
11100000000001000111111111111111111111111000001111111111111111111
11000000000001100111111111111111111111111110000000111111111111111
11000000000000111011111111111100011111000011100000001111111111111
11000000000000011111111111111111000111110000000000000011111111111
11000000000000000011111111111111000000000000000000000000111111111
11001000000000000000001111111110000000000000000000000000001111111
11100110000000000001111111110000000000000000111000000000000111111
11110110000000000000000000000000000000000111111111110000000011111
11111110000000000000000000000000000000001111111111111100000001111
11111110000010000000000000000001100000000111011111111110000001111
11111111000111110000000000000111110000000000111111111110110000111
11111110001111111100010000000001111100000111111111111111110000111
11111110001111111111111110000000111111100000000111111111111000111
11111111001111111111111111111000000111111111111111111111111100011
11111111101111111111111111111110000111111111111111111111111001111
11111111111111111111111111111110001111111111111111111111100111111
11111111111111111111111111111111001111111111111111111111001111111
11111111111111111111111111111111100111111111111111111111111111111
11111111111111111111111111111111110111111111111111111111111111111
*/
//   
// </copyright>
// <summary>
//  ChineseChessVR
// </summary>
// <author>胡良云（CloudHu）</author>
//中文注释：胡良云（CloudHu） 4/30/2017

// --------------------------------------------------------------------------------------------------------------------
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
/// <summary>
/// FileName: GameInterface.cs
/// Author: 胡良云（CloudHu）
/// Corporation: 
/// Description: AI对游戏开放的接口
/// DateTime: 4/30/2017
/// </summary>
public class GameInterface : MonoBehaviour {

    #region Public Variables  //公共变量区域
    #endregion


    #region Protected Variables   //受保护变量区域
    #endregion

    #region Private Variables //私有变量区域
    SearchEngine m_pSE;   //搜索引擎
    #endregion

    #region MonoBehaviour CallBacks //回调函数区域

	#endregion
	
	#region Public Methods	//公共方法区域

    /// <summary>
    /// 移动棋子
    /// </summary>
    /// <param name="nflags">0:人机模式;2:PVP模式</param>
    /// <param name="_x">棋子的X坐标</param>
    /// <param name="_z">棋子的Z坐标</param>
    /// <param name="x">目标位置的X坐标</param>
    /// <param name="z">目标位置的Z坐标</param>
    public void OnMoveChessman(int nflags,int _x,int _z,int x,int z)
    {

        //将当前棋子信息装入记录移动棋子的结构中
        GlobalConst.Instance.ChessBoard[x, z] = GlobalConst.Instance.ChessBoard[_x,_z ];
        //将棋子原位置棋子去掉
        GlobalConst.Instance.ChessBoard[_x, _z] = GlobalConst.NOCHESS;
        //Debug.Log(GlobalConst.Instance.ChessBoard[_x, _z] + "应该是空位!");    
        if (nflags==0 && !NetworkTurn.Instance._isRedTurn)
        {
            m_pSE.SearchAGoodMove(GlobalConst.Instance.ChessBoard);    //让电脑走下一步

        }
    }

    /// <summary>
    /// 创建新的游戏
    /// </summary>
    /// <param name="nSE">搜索引擎</param>
    /// <param name="nPly">搜索深度</param>
    public void OnNewGame(int nSE,int nPly)
    {
        if (m_pSE!=null)
        {
            m_pSE = null;   //释放旧的搜索引擎
        }
        switch (nSE)
        {
            case 0:
                m_pSE = new NegaMaxEngin(); //负极大值搜索引擎
                break;
            case 1:
                m_pSE = new AlphaBeta();    //alpha-beta剪枝
                break;
            case 2:
                m_pSE = new AspirationSearchEngine();   //渴望搜索引擎
                break;
            case 3:
                m_pSE = new NegaScout();   //极小窗口搜索引擎
                break;
            default:
                break;
        }
        m_pSE.SetSearchDeepth(nPly);    //设置搜索深度
        m_pSE.SetEvaluator(new ChessEvaluation());  //设置估值核心

    }
    #endregion

    #region Protected Methods

    #endregion
}
